---
import { t } from 'astro-i18n';
import type { OperatingTime, Organization } from '../content/config';

interface Props {
  operatingTimes: Organization['operatingTimes'];
}

const { operatingTimes } = Astro.props;

// ISO weekday has Monday as first,
// so don't change this order or the highlight will be wrong.
const days: (keyof Organization['operatingTimes'])[] = [
  'monday',
  'tuesday',
  'wednesday',
  'thursday',
  'friday',
  'saturday',
  'sunday',
];
---

<script>
  import { DateTime } from 'luxon';

  document.addEventListener('DOMContentLoaded', () => {
    const { weekday } = DateTime.now().setZone('America/New_York');
    const rowsToHighlight = document.querySelectorAll(`[data-weekday="${weekday}"`);

    rowsToHighlight.forEach((row) => {
      if (row instanceof HTMLElement) {
        const { highlightClass } = row.dataset;
        if (highlightClass) {
          row.classList.add(highlightClass);
        } else {
          console.error('Missing a highlight class');
        }
      } else {
        console.error('Trying to highlight something that is not an element:', row)
      }
    });
  });
</script>

<div>
  <h3 class="divider">
    {t('Hours')}
  </h3>

  <table class="table">
    <tbody>
    {days.map((day, i) => (
      <tr data-weekday={i + 1} data-highlight-class="bg-base-200">
        <th class="align-text-top w-1/4">
          {t(`days.${day}`)}
        </th>

        <td>
          <ul class="text-center">
            {operatingTimes[day]
              ? operatingTimes[day]?.map(({ openTime, closeTime }: OperatingTime) => (
                <li>
                  <time datetime={openTime}>
                    {openTime}
                  </time>
                  {closeTime && (
                    <>
                      -
                      <time datetime={closeTime}>
                        {closeTime}
                      </time>
                    </>
                  )}
                </li>
              ))
              : (
                <li data-day-unavailable>
                  <span class="sr-only">
                    {t('Unavailable')}
                  </span>
                  <span aria-hidden="true">
                    -
                  </span>
                </li>
              )}
          </ul>
        </td>
      </tr>
    ))}
    </tbody>
  </table>
</div>
